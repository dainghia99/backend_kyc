import easyocr
from PIL import Image, ImageDraw, ImageFont
import sys
import os

def test_easyocr():
    try:
        # Kh·ªüi t·∫°o EasyOCR reader
        print("Kh·ªüi t·∫°o EasyOCR reader...")
        reader = easyocr.Reader(['vi', 'en'], gpu=False)
        print("‚úÖ ƒê√£ kh·ªüi t·∫°o EasyOCR reader th√†nh c√¥ng!")
        
        # Ki·ªÉm tra c√°c ng√¥n ng·ªØ c√≥ s·∫µn
        print(f"C√°c ng√¥n ng·ªØ ƒë√£ t·∫£i: vi, en")
        
        try:
            # T·∫°o ·∫£nh ƒë∆°n gi·∫£n ƒë·ªÉ ki·ªÉm tra
            print("\nT·∫°o ·∫£nh ki·ªÉm tra...")
            img = Image.new('RGB', (400, 100), color=(255, 255, 255))
            d = ImageDraw.Draw(img)
            
            # Th·ª≠ t·∫£i font h·ªó tr·ª£ ti·∫øng Vi·ªát n·∫øu c√≥
            try:
                # Th·ª≠ t√¨m font h·ªó tr·ª£ ti·∫øng Vi·ªát
                font_paths = [
                    "C:\\Windows\\Fonts\\arial.ttf",  # Windows
                    "/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf",  # Linux
                    "/System/Library/Fonts/Supplemental/Arial Unicode.ttf"  # macOS
                ]
                
                font = None
                for path in font_paths:
                    if os.path.exists(path):
                        font = ImageFont.truetype(path, 24)
                        break
                
                # N·∫øu kh√¥ng t√¨m th·∫•y font, s·ª≠ d·ª•ng font m·∫∑c ƒë·ªãnh
                if font is None:
                    font = ImageFont.load_default()
                
                # V·∫Ω vƒÉn b·∫£n
                d.text((10, 10), "Xin ch√†o Vi·ªát Nam 123", fill=(0, 0, 0), font=font)
            except Exception as e:
                print(f"Kh√¥ng th·ªÉ t·∫£i font: {e}")
                # S·ª≠ d·ª•ng font m·∫∑c ƒë·ªãnh
                d.text((10, 10), "Xin chao Viet Nam 123", fill=(0, 0, 0))
            
            # L∆∞u h√¨nh ·∫£nh
            test_image_path = "test_ocr_image.png"
            img.save(test_image_path)
            
            # Nh·∫≠n d·∫°ng vƒÉn b·∫£n
            print("ƒêang nh·∫≠n d·∫°ng vƒÉn b·∫£n...")
            result = reader.readtext(test_image_path, detail=0)
            text = "\n".join(result)
            print(f"\nK·∫øt qu·∫£ OCR: {text.strip()}")
            
            # X√≥a h√¨nh ·∫£nh t·∫°m
            os.remove(test_image_path)
            
        except Exception as e:
            print(f"Kh√¥ng th·ªÉ th·ª±c hi·ªán ki·ªÉm tra OCR: {e}")
        
        print("\nEasyOCR ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† c·∫•u h√¨nh ƒë√∫ng! üéâ")
        return True
    except Exception as e:
        print(f"‚ùå L·ªói khi ki·ªÉm tra EasyOCR: {e}")
        
        # Ki·ªÉm tra c√†i ƒë·∫∑t
        try:
            import pkg_resources
            version = pkg_resources.get_distribution("easyocr").version
            print(f"\nPhi√™n b·∫£n EasyOCR hi·ªán t·∫°i: {version}")
        except:
            print("\nKh√¥ng th·ªÉ x√°c ƒë·ªãnh phi√™n b·∫£n EasyOCR.")
        
        # Ki·ªÉm tra c√°c dependencies
        try:
            import torch
            print(f"PyTorch version: {torch.__version__}")
            print(f"CUDA available: {torch.cuda.is_available()}")
        except ImportError:
            print("PyTorch ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t.")
        
        try:
            import torchvision
            print(f"Torchvision version: {torchvision.__version__}")
        except ImportError:
            print("Torchvision ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t.")
        
        try:
            import cv2
            print(f"OpenCV version: {cv2.__version__}")
        except ImportError:
            print("OpenCV ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t.")
        
        print("\nVui l√≤ng c√†i ƒë·∫∑t l·∫°i EasyOCR v√† c√°c dependencies:")
        print("pip install easyocr torch torchvision opencv-python")
        
        return False

if __name__ == "__main__":
    test_easyocr()
